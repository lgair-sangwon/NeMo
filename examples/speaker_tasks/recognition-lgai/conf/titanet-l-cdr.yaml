name: &name "LGAI-TitaNet-cdr/2023-09-04_04-43-52"
sample_rate: &sample_rate 16000

model:
  train_ds:
    manifest_filepath: /data/suhsw1210/labs/nemo-lab/data/train-even.json
    sample_rate: 16000
    labels: null
    batch_size: 128
    shuffle: True
    is_tarred: False
    tarred_audio_filepaths: null
    tarred_shard_strategy: "scatter"
    num_workers: 8
    pin_memory: True
    prefetch_factor: 8
    augmentor:
      noise:
        manifest_path: /data/suhsw1210/labs/nemo-lab/data/musan_noise.json
        prob: 0.5
        min_snr_db: 0
        max_snr_db: 15

      impulse:
        manifest_path: /data/suhsw1210/labs/nemo-lab/data/rir/rir.json
        prob: 0.5

      speed:
        prob: 0.3
        sr: *sample_rate
        resample_type: 'kaiser_fast'
        min_speed_rate: 0.95
        max_speed_rate: 1.05

  validation_ds:
    manifest_filepath: /data/suhsw1210/labs/nemo-lab/data/dev-even.json
    sample_rate: 16000
    labels: null
    batch_size: 128
    shuffle: False
    num_workers: 8
    pin_memory: True
    prefetch_factor: 8

  model_defaults:
    filters: 1024
    repeat: 3
    dropout: 0.0
    separable: true
    se: true
    se_context_size: -1
    kernel_size_factor: 1.0
    
  preprocessor:
    _target_: nemo.collections.asr.modules.AudioToMelSpectrogramPreprocessor
    normalize: "per_feature"
    window_size: 0.025
    sample_rate: *sample_rate
    window_stride: 0.01
    window: "hann"
    features: &n_mels 80
    n_fft: 512
    frame_splicing: 1
    dither: 0.00001
    use_torchaudio: true

  spec_augment:
    _target_: nemo.collections.asr.modules.SpectrogramAugmentation
    freq_masks: 3
    freq_width: 4
    time_masks: 5
    time_width: 0.03

  encoder:
    _target_: nemo.collections.asr.modules.ConvASREncoder
    feat_in: *n_mels
    activation: relu
    conv_mask: true

    jasper:
      -   filters: ${model.model_defaults.filters}
          repeat: 1
          kernel: [3]
          stride: [1]
          dilation: [1]
          dropout: 0.0
          residual: false
          separable: ${model.model_defaults.separable}
          se: ${model.model_defaults.se}
          se_context_size: ${model.model_defaults.se_context_size}

      -   filters: ${model.model_defaults.filters}
          repeat:  ${model.model_defaults.repeat}
          kernel: [7]
          stride: [1]
          dilation: [1]
          dropout: ${model.model_defaults.dropout}
          residual: true
          separable: ${model.model_defaults.separable}
          se: ${model.model_defaults.se}
          se_context_size: ${model.model_defaults.se_context_size}

      -   filters: ${model.model_defaults.filters}
          repeat: ${model.model_defaults.repeat}
          kernel: [11]
          stride: [1]
          dilation: [1]
          dropout: ${model.model_defaults.dropout}
          residual: true
          separable: ${model.model_defaults.separable}
          se: ${model.model_defaults.se}
          se_context_size: ${model.model_defaults.se_context_size}

      -   filters: ${model.model_defaults.filters}
          repeat: ${model.model_defaults.repeat}
          kernel: [15]
          stride: [1]
          dilation: [1]
          dropout: ${model.model_defaults.dropout}
          residual: true
          separable: ${model.model_defaults.separable}
          se: ${model.model_defaults.se}
          se_context_size: ${model.model_defaults.se_context_size}

      -   filters: &enc_feat_out 3072
          repeat: 1
          kernel: [1]
          stride: [1]
          dilation: [1]
          dropout: 0.0
          residual: false
          separable: ${model.model_defaults.separable}
          se: ${model.model_defaults.se}
          se_context_size: ${model.model_defaults.se_context_size}

  decoder:
    _target_: nemo.collections.asr.modules.SpeakerDecoder
    feat_in: *enc_feat_out
    num_classes: 12819
    pool_mode: 'attention'
    emb_sizes: 192

  loss:
    _target_: nemo.collections.asr.losses.angularloss.AngularSoftmaxLoss # you could also use cross-entrophy loss
    scale: 30    
    margin: 0.2  

  optim:
    name: sgd
    lr: .08
    weight_decay: 0.0002
    momentum: 0.9

    # scheduler setup
    sched:
      name: CDR
      step_per_epoch: 11076
      first_cycle_epochs: 1
      cycle_mult: 2
      min_lr: 1.0e-6
      lr_decay: 0.7

trainer:
  devices: -1
  max_epochs: 128
  max_steps: -1 # computed at runtime if not set
  num_nodes: 1
  accelerator: gpu
  strategy: ddp_find_unused_parameters_false
  deterministic: False
  precision: 16
  enable_checkpointing: False
  logger: False
  log_every_n_steps: 100  # Interval of logging.
  check_val_every_n_epoch: 1
  gradient_clip_val: 1.0
  # limit_train_batches: 5
  # limit_val_batches: 5

exp_manager:
  exp_dir: null
  name: *name
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    verbose: False
    save_top_k: -1
  resume_if_exists: True
  resume_from_checkpoint: nemo_experiments/LGAI-TitaNet-cdr/2023-09-04_04-43-52/checkpoints/TitaNet-L--val_loss=4.3512-epoch=3-last.ckpt
